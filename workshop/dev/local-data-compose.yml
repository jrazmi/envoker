services:
  postgres:
    image: postgres:17-alpine
    container_name: vs-postgres
    restart: always
    command: postgres -c ssl=off
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres-data:/data/postgres

    ports:
      - "5432:5432"
    networks:
      - vs-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vs-redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - ./data/redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - vs-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  firebase-emulator:
    build:
      context: ./firebase
      dockerfile: Dockerfile
    container_name: vs-firebase
    restart: always
    ports:
      - "9099:9099" # Auth emulator
      - "4000:4000" # UI
    volumes:
      - ./firebase:/app
      - ./firebase/data:/app/data
    networks:
      - vs-network
    environment:
      - FIREBASE_TOKEN=${FIREBASE_TOKEN:-}

networks:
  vs-network:
    driver: bridge
