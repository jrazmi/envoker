// Code generated by repositorygen. DO NOT EDIT.
// This file contains filtering, ordering, and pagination helpers for SchemaMigration.

package schemamigrationsrepo

import (
	"time"

	"github.com/jrazmi/envoker/core/scaffolding/fop"
)

// OrderBy constants for sorting
const (
	OrderByPK        = "version"
	OrderByCreatedAt = "created_at"
	OrderByUpdatedAt = "updated_at"
	OrderByChecksum = "checksum"
	OrderByAppliedAt = "applied_at"
)

// DefaultOrderBy specifies the default sort order
var DefaultOrderBy = fop.NewBy(OrderByCreatedAt, fop.DESC)

// SchemaMigrationCursor for cursor-based pagination
type SchemaMigrationCursor = fop.Cursor[string, time.Time]

// DecodeSchemaMigrationCursor decodes a cursor token
func DecodeSchemaMigrationCursor(token string) (*SchemaMigrationCursor, error) {
	return fop.DecodeCursor[string, time.Time](token)
}

// EncodeSchemaMigrationCursor encodes a cursor for pagination
func EncodeSchemaMigrationCursor(createdAt time.Time, version string) (string, error) {
	cursor := SchemaMigrationCursor{
		OrderValue: createdAt,
		PK:         version,
	}
	return cursor.Encode()
}

// SchemaMigrationFilter holds the available fields a query can be filtered on
type SchemaMigrationFilter struct {
	SearchTerm *string `json:"search_term,omitempty"` // Search across text fields
	Checksum *string `json:"checksum,omitempty"` // Filter by checksum
	AppliedAt *time.Time `json:"applied_at,omitempty"` // Filter by applied_at
	CreatedAtBefore *time.Time `json:"created_at_before,omitempty"` // Filter by created_at < value
	CreatedAtAfter  *time.Time `json:"created_at_after,omitempty"` // Filter by created_at > value
	UpdatedAtBefore *time.Time `json:"updated_at_before,omitempty"` // Filter by updated_at < value
	UpdatedAtAfter  *time.Time `json:"updated_at_after,omitempty"` // Filter by updated_at > value
}
