package repositorygen

const ModelTemplate = `// Code generated by repositorygen. DO NOT EDIT.
// This file contains the data models for {{.EntityName}}.

package {{.PackageName}}

import (
{{- range .Imports}}
	"{{.}}"
{{- end}}
)

// {{.EntityName}} represents a {{.EntityNameLower}} entity
type {{.EntityName}} struct {
{{- range .EntityFields}}
	{{.Name}} {{.GoType}} ` + "`" + `json:"{{.JSONTag}}" db:"{{.DBTag}}"{{if .ValidateTag}} validate:"{{.ValidateTag}}"{{end}}` + "`" + `{{if .Comment}} // {{.Comment}}{{end}}
{{- end}}
}

// {{.CreateStructName}} contains the data needed to create a new {{.EntityNameLower}}
type {{.CreateStructName}} struct {
{{- range .CreateFields}}
	{{.Name}} {{.GoType}} ` + "`" + `json:"{{.JSONTag}}" db:"{{.DBTag}}"{{if .ValidateTag}} validate:"{{.ValidateTag}}"{{end}}` + "`" + `{{if .Comment}} // {{.Comment}}{{end}}
{{- end}}
}

// {{.UpdateStructName}} contains the data for updating an existing {{.EntityNameLower}}
type {{.UpdateStructName}} struct {
{{- range .UpdateFields}}
	{{.Name}} {{.GoType}} ` + "`" + `json:"{{.JSONTag}}" db:"{{.DBTag}}"{{if .ValidateTag}} validate:"{{.ValidateTag}}"{{end}}` + "`" + `{{if .Comment}} // {{.Comment}}{{end}}
{{- end}}
}

// {{.FilterStructName}} contains optional filters for querying {{.EntityNamePlural}}
type {{.FilterStructName}} struct {
{{- range .FilterFields}}
	{{.Name}} {{.GoType}} ` + "`" + `json:"{{.JSONTag}},omitempty"` + "`" + `{{if .Comment}} // {{.Comment}}{{end}}
{{- end}}
}
`
