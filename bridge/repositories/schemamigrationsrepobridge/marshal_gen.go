// Code generated by bridgegen. DO NOT EDIT.

package schemamigrationsrepobridge

import (
	"github.com/jrazmi/envoker/core/repositories/schemamigrationsrepo"
)

// MarshalToBridge converts a repository SchemaMigration to a bridge SchemaMigration
func MarshalToBridge(repo schemamigrationsrepo.SchemaMigration) SchemaMigration {
	return SchemaMigration{
		Version: repo.Version,
		Checksum: repo.Checksum,
		AppliedAt: repo.AppliedAt,
		CreatedAt: repo.CreatedAt,
		UpdatedAt: repo.UpdatedAt,
	}
}

// MarshalListToBridge converts a list of repository SchemaMigrations to bridge SchemaMigrations
func MarshalListToBridge(repos []schemamigrationsrepo.SchemaMigration) []SchemaMigration {
	result := make([]SchemaMigration, len(repos))
	for i, repo := range repos {
		result[i] = MarshalToBridge(repo)
	}
	return result
}

// MarshalCreateToRepository converts a bridge Create input to repository Create input
func MarshalCreateToRepository(input CreateSchemaMigrationInput) schemamigrationsrepo.CreateSchemaMigration {
	return schemamigrationsrepo.CreateSchemaMigration{
		Version: input.Version,
		Checksum: input.Checksum,
		AppliedAt: input.AppliedAt,
	}
}

// MarshalUpdateToRepository converts a bridge Update input to repository Update input
func MarshalUpdateToRepository(input UpdateSchemaMigrationInput) schemamigrationsrepo.UpdateSchemaMigration {
	return schemamigrationsrepo.UpdateSchemaMigration{
		Checksum: input.Checksum,
		AppliedAt: input.AppliedAt,
	}
}
