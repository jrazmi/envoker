// Code generated by bridgegen. DO NOT EDIT.

package schemamigrationsrepobridge

import (
	"encoding/json"
)

// SchemaMigration represents the bridge model for schemaMigration
type SchemaMigration struct {
	Version string `json:"version"`
	Checksum string `json:"checksum"`
	AppliedAt time.Time `json:"applied_at"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// Encode implements the encoder interface
func (t SchemaMigration) Encode() ([]byte, string, error) {
	data, err := json.Marshal(t)
	return data, "application/json", err
}

// CreateSchemaMigrationInput represents the input for creating a new schemaMigration
type CreateSchemaMigrationInput struct {
	Version string `json:"version"`
	Checksum string `json:"checksum"`
	AppliedAt time.Time `json:"applied_at,omitempty"`
}

// Decode implements the decoder interface
func (c *CreateSchemaMigrationInput) Decode(data []byte) error {
	return json.Unmarshal(data, c)
}

// UpdateSchemaMigrationInput represents the input for updating a schemaMigration
type UpdateSchemaMigrationInput struct {
	Checksum *string `json:"checksum,omitempty"`
	AppliedAt *time.Time `json:"applied_at,omitempty"`
}

// Decode implements the decoder interface
func (u *UpdateSchemaMigrationInput) Decode(data []byte) error {
	return json.Unmarshal(data, u)
}
